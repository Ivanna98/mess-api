"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const express_1 = tslib_1.__importDefault(require("express"));
const http_1 = tslib_1.__importDefault(require("http"));
const mongoose_1 = tslib_1.__importDefault(require("mongoose"));
const morgan_1 = tslib_1.__importDefault(require("morgan"));
const cors_1 = tslib_1.__importDefault(require("cors"));
const passport_1 = tslib_1.__importDefault(require("passport"));
const config_1 = require("./config");
const ws_1 = require("./ws");
const passportJwt_1 = require("./middleware/passportJwt");
const channel_1 = require("./routes/channel");
const message_1 = require("./routes/message");
const user_1 = require("./routes/user");
const auth_1 = require("./routes/auth");
const passport_2 = tslib_1.__importDefault(require("./middleware/passport"));
const app = express_1.default();
const server = http_1.default.createServer(app);
const DB_URL = config_1.config.db.url;
exports.configApp = () => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    app.use(cors_1.default());
    app.use(morgan_1.default('dev'));
    app.use(express_1.default.json());
    app.use(express_1.default.urlencoded({ extended: true }));
    app.use(passport_1.default.initialize());
    passport_2.default();
    passportJwt_1.connectPassport(passport_1.default);
    app.use('/auth', auth_1.router);
    app.use('/user', user_1.router);
    app.use('/channels', channel_1.router);
    app.use('/message', message_1.router);
    ws_1.ws(server);
    mongoose_1.default.connection.on('error', (err) => {
        console.log(err);
    });
    yield mongoose_1.default.connect(DB_URL, { useNewUrlParser: true, useUnifiedTopology: true });
    return server;
});
